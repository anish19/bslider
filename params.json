{"name":"BSlider","tagline":"A simple way to create sliders for Backbone views.","body":"### BSlider\r\nA backbone based slider for backbone views. \r\n\r\n_Note: It's currently in the pre release state. Use in production at your own risk! I will have a production version ready on or before September 30th_\r\n\r\n####Demos \r\n[Slider with crosslinks](http://bslider-demo.herokuapp.com/demo.html)\r\n\r\n#Getting Started\r\nBackbone.Slider (BSlider) is built on top of [Backbone.js](http://backbonejs.org). Make sure Backbone is setup in your application, and you have the CSS files for Backbone.Slider. Backbone.Slider uses [Font Awesome](http://fortawesome.github.io/Font-Awesome/), [jQuery-ui](http://jqueryui.com), and [jQuery](http://jquery.com). Please be sure to include those. \r\n\r\n####Backbone.Slider\r\n\r\n```javascript\r\nvar MySlider = Backbone.Slider.extend({\r\n    views: [myBackboneViewOne, myBackboneViewTwo] \r\n}); //The Views should be rendered\r\n\r\nvar instance = new MySlider().render();\r\n```\r\n\r\n####addViews  <code>instance.addViews</code>\r\nAdd an array of views to an instance of the slider.\r\n\r\n####Initial View To Be Rendered\r\nWhen the slider is rendered, if you require a specific view to be shown as the first slide, it can be specified as an option. \r\n\r\n_Future versions will include selecting initial views by name, id, etc._\r\n\r\n```javascript\r\nvar MySlider = Backbone.Slider.extend({\r\n    initialViewToBeRendered: 1,\r\n    views: [myBackboneViewOne, myBackboneViewTwo] \r\n}); //Index starts at 0\r\n\r\nvar instance = new MySlider().render();\r\n```\r\n\r\n####Crosslinks\r\nCross-links can be enabled by passing in an option while extending.\r\n```javascript\r\nvar MySlider = Backbone.Slider.extend({\r\n    enableCrossLinks: true,\r\n    views: [myBackboneViewOne, myBackboneViewTwo] \r\n}); \r\n```\r\n\r\n####bsliderCrossLinkTitle \r\nCross-link titles can be specified as a property of the backbone view.\r\n```javascript\r\nvar MyBackboneView = Backbone.View.extend({bsliderCrossLinkTitle: 'My View'}),\r\n    myBackboneViewOne = new MyBackboneView(); //View(s) should be rendered\r\n\r\nvar MySlider = Backbone.Slider.extend({\r\n    enableCrossLinks: true,\r\n    views: [myBackboneViewOne] \r\n}); \r\n```\r\n####cycleThrough  \r\nEnable this option to cycle through views. \r\n```javascript\r\nvar MySlider = Backbone.Slider.extend({\r\n    cycleThrough: true,\r\n    views: [myBackboneViewOne, myBackboneViewTwo] \r\n}); \r\n```\r\n\r\n####preTransition and postTransition\r\nIf you want to control what happens before and/or after slide transitions, define preTransition, and/or postTransition functions while extending. \r\n\r\n```javascript\r\nvar MySlider = Backbone.Slider.extend({\r\n    preTransition: function () { //Do something },\r\n    postTransition: function () { //Do something }\r\n}); \r\n```\r\n\r\n####slideTransitionDuration\r\nUse the property slideTransitionDuration while extending the slider to control the duration of the slide transition animations.\r\n\r\n###More features coming soon. Stay tuned!\r\n### Author\r\n@karun012\r\n\r\n### Support\r\nContact me at karun012@gmail.com if you have any questions/comments/suggestions.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}